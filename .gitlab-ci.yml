image: docker:stable

stages:
  - build
  - test
  - release
  - deploy


variables:
  APP_IMAGE: registry.gitlab.com/blasttheory/gift/gift-app
  STORYBOOK_IMAGE: registry.gitlab.com/blasttheory/gift/gift-storybook


before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com


build-frontend:
  stage: build
  services:
    - docker:dind
  script:
    # Pull previous containers to benefit from layer caching
    - docker pull $APP_IMAGE:latest || true
    - docker pull $STORYBOOK_IMAGE:latest || true

    # Build the projects
    - docker build --pull --cache-from $APP_IMAGE:latest --target=app -t $APP_IMAGE -f ./app/Dockerfile ./app
    - docker build --pull --cache-from $STORYBOOK_IMAGE:latest --target=storybook -t $STORYBOOK_IMAGE -f ./app/Dockerfile ./app

    # Push new images to registry
    - docker tag $APP_IMAGE $APP_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $STORYBOOK_IMAGE $STORYBOOK_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $APP_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $STORYBOOK_IMAGE:$CI_COMMIT_SHORT_SHA

    # Mark the images for release (should be done only after tests have passed)
    - docker tag $APP_IMAGE $APP_IMAGE:latest
    - docker tag $STORYBOOK_IMAGE $STORYBOOK_IMAGE:latest
    - docker push $APP_IMAGE:latest
    - docker push $STORYBOOK_IMAGE:latest
  only:
    refs:
      - master
    changes:
      - app/*


deploy-to-staging:
  stage: deploy
  image: alpine
  before_script:
    - apk --no-cache add openssh-client
  script:
    - echo "Deploying to staging..."
    - echo "$STAGING_DEPLOY_KEY" > deploy-key
    - chmod 600 deploy-key
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H staging.gift.blasttheory.com >> ~/.ssh/known_hosts
    - ssh -i deploy-key root@staging.gift.blasttheory.com -C docker service update gift-app --image $APP_IMAGE
    - ssh -i deploy-key root@staging.gift.blasttheory.com -C docker service update gift-storybook --image $STORYBOOK_IMAGE
  environment:
    name: staging
  only:
    refs:
      - master
    changes:
      - app/*
