# IGNORE_ME: bump-001
image: docker:stable

stages:
  - build
  - test
  - release
  - deploy

variables:
  APP_IMAGE: registry.gitlab.com/blasttheory/gift/gift-app
  STORYBOOK_IMAGE: registry.gitlab.com/blasttheory/gift/gift-storybook
  API_TEST_IMAGE: registry.gitlab.com/blasttheory/gift/gift-api-test
  API_RELEASE_IMAGE: registry.gitlab.com/blasttheory/gift/gift-api
  STAGING_TAG: ${CI_COMMIT_SHORT_SHA}-staging
  PRODUCTION_TAG: ${CI_COMMIT_SHORT_SHA}-production

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  # Need a full-featured version of tar, rather than busybox one
  - apk --no-cache add 'tar=1.32-r0'


# ========
# FRONTEND
# ========

build-frontend-staging:
  stage: build
  services:
    - docker:dind
  variables:
    NODE_ENV: staging
    BABEL_ENV: production
  script:
    # Build the projects (we pass the context via tar so we can deference symlinks)
    - cd app
    - tar -cz --dereference --exclude-ignore=.dockerignore . | docker build --pull --build-arg NODE_ENV --build-arg BABEL_ENV --target=app --tag $APP_IMAGE -
    - tar -cz --dereference --exclude-ignore=.dockerignore . | docker build --pull --build-arg NODE_ENV --build-arg BABEL_ENV --target=storybook --tag $STORYBOOK_IMAGE -

    # Push new images to registry
    - docker tag $APP_IMAGE $APP_IMAGE:$STAGING_TAG
    - docker tag $STORYBOOK_IMAGE $STORYBOOK_IMAGE:$STAGING_TAG
    - docker push $APP_IMAGE:$STAGING_TAG
    - docker push $STORYBOOK_IMAGE:$STAGING_TAG
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - app/**/*
      - common/**/*


build-frontend-production:
  stage: build
  services:
    - docker:dind
  variables:
    NODE_ENV: production
    BABEL_ENV: production
  script:
    # Build the projects (we pass the context via tar so we can deference symlinks)
    - cd app
    - tar -cz --dereference --exclude-ignore=.dockerignore . | docker build --pull --build-arg NODE_ENV --build-arg BABEL_ENV --target=app --tag $APP_IMAGE -

    # Push new images to registry
    - docker tag $APP_IMAGE $APP_IMAGE:$PRODUCTION_TAG
    - docker push $APP_IMAGE:$PRODUCTION_TAG
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - app/**/*
      - common/**/*


deploy-frontend-to-staging:
  stage: deploy
  image: alpine
  before_script:
    - apk --no-cache add openssh-client
  script:
    - echo "Deploying to staging..."
    - echo "$STAGING_DEPLOY_KEY" > deploy-key
    - chmod 600 deploy-key
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H staging.gift.blasttheory.com >> ~/.ssh/known_hosts
    - |
      ssh -T -i deploy-key root@staging.gift.blasttheory.com <<ENDSSH
        docker service update gift_app --image $APP_IMAGE:$STAGING_TAG
        docker service update gift_app-munch --image $APP_IMAGE:$STAGING_TAG
        docker service update gift_storybook --image $STORYBOOK_IMAGE:$STAGING_TAG
      ENDSSH
  environment:
    name: staging
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - app/**/*
      - common/**/*


deploy-frontend-to-production:
  stage: deploy
  image: alpine
  before_script:
    - apk --no-cache add openssh-client
  script:
    - echo "Deploying to production..."
    - echo "$PRODUCTION_DEPLOY_KEY" > deploy-key
    - chmod 600 deploy-key
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H thegift.app >> ~/.ssh/known_hosts
    - |
      ssh -T -i deploy-key root@thegift.app <<ENDSSH
        docker service update gift_app --image $APP_IMAGE:$PRODUCTION_TAG
        docker service update gift_app-demo --image $APP_IMAGE:$PRODUCTION_TAG
        docker service update gift_app-munch --image $APP_IMAGE:$PRODUCTION_TAG
      ENDSSH
  environment:
    name: production
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - app/**/*
      - common/**/*
  when: manual


# =======
# BACKEND
# =======

build-backend:
  stage: build
  services:
    - docker:dind
  script:
    # Build the projects (we pass the context via tar so we can deference symlinks)
    - cd api
    - tar -cz --dereference --exclude-ignore=.dockerignore . | docker build --pull --target=build --tag $API_TEST_IMAGE -
    - tar -cz --dereference --exclude-ignore=.dockerignore . | docker build --pull --target=release --tag $API_RELEASE_IMAGE -

    # Push new images to registry
    - docker tag $API_TEST_IMAGE $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $API_RELEASE_IMAGE $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*


lint-backend:
  stage: test
  services:
    - docker:dind
  script:
    - docker pull $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker run --rm $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA yarn lint
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*


test-backend:
  stage: test
  services:
    - docker:dind
  script:
    - docker pull $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker run --rm $API_TEST_IMAGE:$CI_COMMIT_SHORT_SHA yarn test
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*


release-backend:
  stage: release
  services:
    - docker:dind
  script:
    - docker pull $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA $API_RELEASE_IMAGE:latest
    - docker push $API_RELEASE_IMAGE:latest
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*


deploy-backend-to-staging:
  stage: deploy
  image: alpine
  before_script:
    - apk --no-cache add openssh-client
  script:
    - echo "Deploying to staging..."
    - echo "$STAGING_DEPLOY_KEY" > deploy-key
    - chmod 600 deploy-key
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H staging.gift.blasttheory.com >> ~/.ssh/known_hosts
    - |
      ssh -T -i deploy-key root@staging.gift.blasttheory.com <<ENDSSH
        docker service update gift_api --image $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA
      ENDSSH
  environment:
    name: staging
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*


deploy-backend-to-production:
  stage: deploy
  image: alpine
  before_script:
    - apk --no-cache add openssh-client
  script:
    - echo "Deploying to staging..."
    - echo "$PRODUCTION_DEPLOY_KEY" > deploy-key
    - chmod 600 deploy-key
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H thegift.app >> ~/.ssh/known_hosts
    - |
      ssh -T -i deploy-key root@thegift.app <<ENDSSH
        docker service update gift_api --image $API_RELEASE_IMAGE:$CI_COMMIT_SHORT_SHA
      ENDSSH
  environment:
    name: production
  only:
    refs:
      - master
    changes:
      - .gitlab-ci.yml
      - api/**/*
      - common/**/*
  when: manual
